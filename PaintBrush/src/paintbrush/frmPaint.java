/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paintbrush;

import java.awt.event.MouseEvent;
import javax.swing.JColorChooser;

/**
 *
 * @author diego
 */
public class frmPaint extends javax.swing.JFrame {
    private enum TipoFigura{tfPonto, tfReta, tfCirculo, tfRetangulo, tfCilindro, tfPiramide, tfPoligono, tfSpray, tfBorracha};
    private TipoFigura tipoFigura = TipoFigura.tfPonto; // Variavel global controladora do tipo figura
    Retangulo retangulo;
    Reta reta;
    Circulo circulo;
    Borracha borracha;
    Poligono poligono;
    Spray spray;
    Cilindro cilindro;
    Piramide piramide;
    

    /**
     * Creates new form TelaDeDesenho
     */
    public frmPaint() {
        initComponents();
        retangulo = new Retangulo();
        reta = new Reta();
        circulo = new Circulo();
        borracha = new Borracha();
        poligono = new Poligono();
        spray = new Spray();
        cilindro = new Cilindro();
        piramide = new Piramide();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInteracao = new javax.swing.JPanel();
        btnPincel = new javax.swing.JButton();
        btnLinha = new javax.swing.JButton();
        btnRetangulo = new javax.swing.JButton();
        btnCirculo = new javax.swing.JButton();
        btnBorracha = new javax.swing.JButton();
        btnPoligono = new javax.swing.JButton();
        btnSpray = new javax.swing.JButton();
        btnCilindro = new javax.swing.JButton();
        btnPiramide = new javax.swing.JButton();
        pnlPaint = new javax.swing.JPanel();
        jColorChooser = new javax.swing.JColorChooser();
        chkArea = new javax.swing.JCheckBox();
        pnlCores = new javax.swing.JPanel();
        pnlCorExterna = new javax.swing.JPanel();
        pnlCorInterna = new javax.swing.JPanel();
        lblCorExterna = new javax.swing.JLabel();
        lblCorInterna = new javax.swing.JLabel();
        chkPerimetro = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnPincel.setBackground(new java.awt.Color(255, 255, 255));
        btnPincel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/PencilIcon.png"))); // NOI18N
        btnPincel.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnPincel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPincelActionPerformed(evt);
            }
        });

        btnLinha.setBackground(new java.awt.Color(255, 255, 255));
        btnLinha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/LineIcon.png"))); // NOI18N
        btnLinha.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinhaActionPerformed(evt);
            }
        });

        btnRetangulo.setBackground(new java.awt.Color(255, 255, 255));
        btnRetangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/RectangleIcon.png"))); // NOI18N
        btnRetangulo.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnRetangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetanguloMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRetanguloMouseReleased(evt);
            }
        });
        btnRetangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetanguloActionPerformed(evt);
            }
        });

        btnCirculo.setBackground(new java.awt.Color(255, 255, 255));
        btnCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/CircleIcon.png"))); // NOI18N
        btnCirculo.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnCirculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCirculoActionPerformed(evt);
            }
        });

        btnBorracha.setBackground(new java.awt.Color(255, 255, 255));
        btnBorracha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/EraserIcon.png"))); // NOI18N
        btnBorracha.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnBorracha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrachaActionPerformed(evt);
            }
        });

        btnPoligono.setBackground(new java.awt.Color(255, 255, 255));
        btnPoligono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/PoligonIcon.png"))); // NOI18N
        btnPoligono.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnPoligono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPoligonoActionPerformed(evt);
            }
        });

        btnSpray.setBackground(new java.awt.Color(255, 255, 255));
        btnSpray.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/SprayIcon.png"))); // NOI18N
        btnSpray.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnSpray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSprayActionPerformed(evt);
            }
        });

        btnCilindro.setBackground(new java.awt.Color(255, 255, 255));
        btnCilindro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/CylinderIcon.png"))); // NOI18N
        btnCilindro.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnCilindro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCilindroActionPerformed(evt);
            }
        });

        btnPiramide.setBackground(new java.awt.Color(255, 255, 255));
        btnPiramide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/PyramidIcon.png"))); // NOI18N
        btnPiramide.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));
        btnPiramide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPiramideActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInteracaoLayout = new javax.swing.GroupLayout(pnlInteracao);
        pnlInteracao.setLayout(pnlInteracaoLayout);
        pnlInteracaoLayout.setHorizontalGroup(
            pnlInteracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPincel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnLinha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnRetangulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnCirculo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnBorracha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPoligono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSpray, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnCilindro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPiramide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlInteracaoLayout.setVerticalGroup(
            pnlInteracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInteracaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPincel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRetangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorracha, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPoligono, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSpray, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCilindro, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPiramide, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlPaint.setBackground(new java.awt.Color(255, 255, 255));
        pnlPaint.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlPaintMouseDragged(evt);
            }
        });
        pnlPaint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlPaintMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlPaintMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlPaintLayout = new javax.swing.GroupLayout(pnlPaint);
        pnlPaint.setLayout(pnlPaintLayout);
        pnlPaintLayout.setHorizontalGroup(
            pnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPaintLayout.setVerticalGroup(
            pnlPaintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        chkArea.setText("Exibir Área");
        chkArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAreaActionPerformed(evt);
            }
        });

        pnlCorExterna.setBackground(new java.awt.Color(0, 0, 0));
        pnlCorExterna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCorExternaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCorExternaLayout = new javax.swing.GroupLayout(pnlCorExterna);
        pnlCorExterna.setLayout(pnlCorExternaLayout);
        pnlCorExternaLayout.setHorizontalGroup(
            pnlCorExternaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        pnlCorExternaLayout.setVerticalGroup(
            pnlCorExternaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        pnlCorInterna.setBackground(new java.awt.Color(255, 255, 255));
        pnlCorInterna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCorInternaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlCorInternaLayout = new javax.swing.GroupLayout(pnlCorInterna);
        pnlCorInterna.setLayout(pnlCorInternaLayout);
        pnlCorInternaLayout.setHorizontalGroup(
            pnlCorInternaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        pnlCorInternaLayout.setVerticalGroup(
            pnlCorInternaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        lblCorExterna.setBackground(new java.awt.Color(0, 0, 0));
        lblCorExterna.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        lblCorExterna.setForeground(new java.awt.Color(0, 0, 0));
        lblCorExterna.setText("Cor externa");

        lblCorInterna.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        lblCorInterna.setForeground(new java.awt.Color(0, 0, 0));
        lblCorInterna.setText("Cor interna");

        javax.swing.GroupLayout pnlCoresLayout = new javax.swing.GroupLayout(pnlCores);
        pnlCores.setLayout(pnlCoresLayout);
        pnlCoresLayout.setHorizontalGroup(
            pnlCoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCoresLayout.createSequentialGroup()
                        .addComponent(pnlCorExterna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCorExterna))
                    .addGroup(pnlCoresLayout.createSequentialGroup()
                        .addComponent(pnlCorInterna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCorInterna)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCoresLayout.setVerticalGroup(
            pnlCoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlCorExterna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCorExterna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlCorInterna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCorInterna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        chkPerimetro.setText("Exibir Perímetro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlCores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(24, 24, 24))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkPerimetro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkArea)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlInteracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlPaint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPaint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlInteracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkPerimetro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinhaActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfReta;
    }//GEN-LAST:event_btnLinhaActionPerformed

    private void pnlCorExternaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCorExternaMouseClicked
        // TODO add your handling code here:
        pnlCorExterna.setBackground(jColorChooser.getColor());
        
    }//GEN-LAST:event_pnlCorExternaMouseClicked

    private void pnlCorInternaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCorInternaMouseClicked
        // TODO add your handling code here:
        pnlCorInterna.setBackground(jColorChooser.getColor());
    }//GEN-LAST:event_pnlCorInternaMouseClicked

    private void btnPincelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPincelActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfPonto;
    }//GEN-LAST:event_btnPincelActionPerformed

    private void btnRetanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetanguloActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfRetangulo;
    }//GEN-LAST:event_btnRetanguloActionPerformed

    private void btnCirculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCirculoActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfCirculo;
    }//GEN-LAST:event_btnCirculoActionPerformed

    private void btnBorrachaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrachaActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfBorracha;
    }//GEN-LAST:event_btnBorrachaActionPerformed

    private void btnSprayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSprayActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfSpray;
    }//GEN-LAST:event_btnSprayActionPerformed

    private void btnCilindroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCilindroActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfCilindro;

    }//GEN-LAST:event_btnCilindroActionPerformed

    private void btnPiramideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPiramideActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfPiramide;

    }//GEN-LAST:event_btnPiramideActionPerformed

    private void pnlPaintMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPaintMousePressed
        // TODO add your handling code here:
        if(tipoFigura == TipoFigura.tfPonto){
            Ponto p = new Ponto();
            p.cor = pnlCorExterna.getBackground();
            p.x = evt.getX();
            p.y = evt.getY();
            p.desenhar(pnlPaint.getGraphics());          
        }else if(tipoFigura == TipoFigura.tfRetangulo){
            retangulo.cor = pnlCorInterna.getBackground();
            retangulo.x = evt.getX();
            retangulo.y = evt.getY();
            //retangulo.desenhar(pnlPaint.getGraphics());
        }else if(tipoFigura == TipoFigura.tfReta){
            reta.x = evt.getX();
            reta.y = evt.getY();
        }else if(tipoFigura == TipoFigura.tfCirculo){
            circulo.x = evt.getX();
            circulo.y = evt.getY();
        }else if(tipoFigura == TipoFigura.tfPoligono){
            poligono.cor = pnlCorExterna.getBackground();
            poligono.corInterna = pnlCorInterna.getBackground();
            poligono.adicionarPonto(evt.getX(), evt.getY());
            
            if( poligono.lstPontos.size() >= 3 && evt.getButton() == MouseEvent.BUTTON3){
                    poligono.desenhar(pnlPaint.getGraphics());
            }
        }else if(tipoFigura == TipoFigura.tfCilindro){
            cilindro.x = evt.getX();
            cilindro.y = evt.getY();
        }else if(tipoFigura == TipoFigura.tfPiramide){
            piramide.x = evt.getX();
            piramide.y = evt.getY();
        }
    }//GEN-LAST:event_pnlPaintMousePressed

    private void btnRetanguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetanguloMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnRetanguloMouseClicked

    private void chkAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAreaActionPerformed

    private void btnRetanguloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetanguloMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_btnRetanguloMouseReleased

    private void pnlPaintMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPaintMouseReleased
        // TODO add your handling code here:
        if(tipoFigura == TipoFigura.tfRetangulo){
            retangulo.base = evt.getX() - retangulo.x;
            retangulo.largura = evt.getY() - retangulo.y;
            retangulo.exibirArea = chkArea.isSelected();
            retangulo.exibirPerimetro = chkPerimetro.isSelected();
            
            retangulo.corInterna = pnlCorInterna.getBackground();
            retangulo.cor = pnlCorExterna.getBackground();
            retangulo.desenhar(pnlPaint.getGraphics());
        }else if(tipoFigura == TipoFigura.tfReta){
            reta.cor = pnlCorExterna.getBackground();
            reta.xFinal = evt.getX();
            reta.yFinal = evt.getY();
            reta.desenhar(pnlPaint.getGraphics());
        }else if(tipoFigura == TipoFigura.tfCirculo){
            circulo.raio = (int) Math.sqrt(Math.pow(evt.getX() - circulo.x, 2) + Math.pow(evt.getY() - circulo.y, 2));
            circulo.exibirArea = chkArea.isSelected();
            circulo.exibirPerimetro = chkPerimetro.isSelected();
            circulo.corInterna = pnlCorInterna.getBackground();
            circulo.cor = pnlCorExterna.getBackground();
            circulo.desenhar(pnlPaint.getGraphics());
        }else if(tipoFigura == TipoFigura.tfCilindro){
            cilindro.X2 = evt.getX();
            cilindro.Y2 = evt.getY();

            cilindro.cor = pnlCorExterna.getBackground();
            cilindro.corInterna = pnlCorInterna.getBackground();

            cilindro.raio = (evt.getX()-cilindro.x)/2;

            cilindro.desenhar(pnlPaint.getGraphics());
        }else if(tipoFigura == TipoFigura.tfPiramide){
            piramide.X2 = evt.getX();
            piramide.Y2 = evt.getY();

            piramide.cor = pnlCorExterna.getBackground();
            piramide.corInterna = pnlCorInterna.getBackground();

            piramide.desenhar(pnlPaint.getGraphics());
        }
    }//GEN-LAST:event_pnlPaintMouseReleased

    private void btnPoligonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPoligonoActionPerformed
        // TODO add your handling code here:
        tipoFigura = TipoFigura.tfPoligono;
    }//GEN-LAST:event_btnPoligonoActionPerformed

    private void pnlPaintMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPaintMouseDragged
        // TODO add your handling code here:
        // Arrastar mouse
        if(tipoFigura == TipoFigura.tfBorracha){
            borracha.x = evt.getX();
            borracha.y = evt.getY();
            borracha.cor = pnlPaint.getBackground();
            borracha.desenhar(pnlPaint.getGraphics());
        }else if(tipoFigura == TipoFigura.tfSpray){
            spray.x =evt.getX();
            spray.y = evt.getY();
            spray.cor = pnlCorExterna.getBackground();
            spray.desenhar(pnlPaint.getGraphics());
        }
    }//GEN-LAST:event_pnlPaintMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPaint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorracha;
    private javax.swing.JButton btnCilindro;
    private javax.swing.JButton btnCirculo;
    private javax.swing.JButton btnLinha;
    private javax.swing.JButton btnPincel;
    private javax.swing.JButton btnPiramide;
    private javax.swing.JButton btnPoligono;
    private javax.swing.JButton btnRetangulo;
    private javax.swing.JButton btnSpray;
    private javax.swing.JCheckBox chkArea;
    private javax.swing.JCheckBox chkPerimetro;
    private javax.swing.JColorChooser jColorChooser;
    private javax.swing.JLabel lblCorExterna;
    private javax.swing.JLabel lblCorInterna;
    private javax.swing.JPanel pnlCorExterna;
    private javax.swing.JPanel pnlCorInterna;
    private javax.swing.JPanel pnlCores;
    private javax.swing.JPanel pnlInteracao;
    private javax.swing.JPanel pnlPaint;
    // End of variables declaration//GEN-END:variables
}
